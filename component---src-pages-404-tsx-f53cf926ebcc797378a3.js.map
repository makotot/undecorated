{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/wrapper.tsx","webpack:///./src/components/global-style.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/main.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/layout.tsx"],"names":["NotFoundPage","title","StyledWrapper","styled","div","Wrapper","children","globalStyle","GlobalStyle","createGlobalStyle","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","name","content","titleTemplate","rel","href","defaultProps","StyledHeader","header","Heading","h1","SubHeading","p","Header","Block","size","Element","StyledMain","main","Main","StyledFooter","InlineCentered","Link","a","Footer","target","Layout"],"mappings":"0FAAA,wEAoBeA,UAbM,kBACnB,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,MAAM,QACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,W,iCCbR,oDAGMC,EAHN,MAGsBC,QAAOC,IAAV,6EAAGD,CAAH,mEAObE,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,kBAACJ,EAAD,KAAiBI,K,2NCTnB,IAAMC,EAAc,yjCAqEdC,EAAcC,4BAAH,IAAwBF,I,gFCnEzC,SAASG,EAAT,GAAoH,IAArGC,EAAqG,EAArGA,YAAaC,EAAwF,EAAxFA,KAAYX,GAA4E,EAAlFY,KAAkF,EAA5EZ,OAC9Ba,EAD0G,OAC1GA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFX,MAAOA,EACPY,KAAM,CACJ,CACEK,KAAM,cACNC,QAASJ,IAGbK,cAAa,GAAKN,EAAKE,aAAaf,OAEpC,0BAAMoB,IAAI,aAAaC,KAAK,sFAKlCZ,EAAIa,aAAe,CACjBX,KAAM,KACNC,KAAM,GACNF,YAAa,IAGAD,O,qYCzCTc,EAAerB,UAAOsB,OAAV,uEAAGtB,CAAH,2EAMZuB,EAAUvB,UAAOwB,GAAV,kEAAGxB,CAAH,yHAUPyB,EAAazB,UAAO0B,EAAV,qEAAG1B,CAAH,0EAYV2B,EAAiC,SAAC,GAAc,EAAZ7B,MACxC,OACE,kBAACuB,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,YAAUO,MAAX,CAAiBC,KAAK,MACpB,kBAAC,YAAUC,QAAX,KACE,kBAACP,EAAD,qBAEF,kBAAC,YAAUO,QAAX,KACE,kBAACL,EAAD,mDCvCNM,EAAa/B,UAAOgC,KAAV,mEAAGhC,CAAH,0BAIViC,EAAkB,SAAC,GAAD,IAAG9B,EAAH,EAAGA,SAAH,OAAkB,kBAAC4B,EAAD,KAAc5B,I,SCFlD+B,EAAelC,kBAAOmC,iBAAeP,OAAzB,2EAAG5B,CAAH,qBAIZoC,EAAOpC,UAAOqC,EAAV,mEAAGrC,CAAH,iBAIJsC,EAAS,kBACb,gCACE,kBAACJ,EAAD,KACE,kBAACE,EAAD,CAAMjB,KAAK,0CAA0CoB,OAAO,SAASrB,IAAI,YACvE,kBAAC,IAAD,UCcOsB,IAxBW,SAAC,GAAiB,IAAfrC,EAAe,EAAfA,SACd,OAUb,OACE,oCACE,kBAAC,EAAD,CAAQL,MAAQ,2BAChB,kBAAC,EAAD,KACIK,GAEJ,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"component---src-pages-404-tsx-f53cf926ebcc797378a3.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport { GlobalStyle } from '../components/global-style'\nimport { Wrapper } from '../components/wrapper'\nimport Layout from '../components/layout'\nimport { AppProvider } from '../context/app-context'\n\nconst NotFoundPage = () => (\n  <>\n    <GlobalStyle />\n    <SEO title=\"404\" />\n    <AppProvider>\n      <Layout>\n        <Wrapper>\n        </Wrapper>\n      </Layout>\n    </AppProvider>\n  </>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledWrapper = styled.div`\n  max-width: 980px;\n  min-width: 320px;\n  margin: 0 auto;\n  padding: 0 1rem;\n`\n\nconst Wrapper: React.SFC = ({ children }) => (\n  <StyledWrapper>{ children }</StyledWrapper>\n)\n\nexport {\n  Wrapper,\n}","import { createGlobalStyle } from 'styled-components'\n\nconst globalStyle = `\n  * {\n    box-sizing: border-box;\n  }\n\n  *::before, *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: 16px;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body {\n    width: 100%;\n    margin: 0;\n    font-family: 'Source Sans Pro', -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif;\n    line-height: 1.25;\n    background-color: #fff;\n    color: #222;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul, ol {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  button {\n    border: 0;\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n\n  pre {\n    margin: 0;\n  }\n\n  .dummy {\n    display: block;\n    padding: 2rem;\n    background-color: rgba(190, 170, 255, 0.5);\n    border: 2px solid #7e91ff;\n  }\n\n  .dummy-inline {\n    display: inline;\n    background-color: rgba(190, 170, 255, 0.5);\n    color: #7e91ff;\n    font-weight: bold;\n    border: 0;\n  }\n\n  .dummy-wrapper {\n    width:100%;\n    height: 10rem;\n  }\n`\n\nconst GlobalStyle = createGlobalStyle`${ globalStyle }`\n\nexport {\n  GlobalStyle,\n  globalStyle,\n}\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }: { description: string, lang: string, meta: any[], title: string }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        }\n      ]}\n      titleTemplate={`${site.siteMetadata.title}`}\n    >\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600&display=swap\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React, { useContext, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Wrapper } from './wrapper'\nimport { GutterRow } from 'undecorated'\n\nconst StyledHeader = styled.header`\n  padding: 1.25rem 0;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n`\n\nconst Heading = styled.h1`\n  margin: 0;\n  color: #333;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n`\n\nconst SubHeading = styled.p`\n  color: #444;\n  font-size: 0.75rem;\n  font-weight: 300;\n  letter-spacing: 0.05rem;\n`\n\ntype HeaderProps = {\n  title: string,\n  children?: ReactNode,\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => {\n  return (\n    <StyledHeader>\n      <Wrapper>\n        <GutterRow.Block size=\"xs\">\n          <GutterRow.Element>\n            <Heading>undecorated</Heading>\n          </GutterRow.Element>\n          <GutterRow.Element>\n            <SubHeading>Collection of reusable layout pattern</SubHeading>\n          </GutterRow.Element>\n        </GutterRow.Block>\n      </Wrapper>\n    </StyledHeader>\n  )\n}\n\nexport {\n  Header,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledMain = styled.main`\n  padding: 2rem 0 1rem;\n`\n\nconst Main: React.SFC = ({ children }) => <StyledMain>{ children }</StyledMain>\n\nexport {\n  Main,\n}\n","import React, { useContext, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { FiGithub } from 'react-icons/fi'\nimport { InlineCentered } from 'undecorated'\n\nconst StyledFooter = styled(InlineCentered.Block)`\n  padding: 1rem 0;\n`\n\nconst Link = styled.a`\n  color: #222;\n`\n\nconst Footer = () => (\n  <footer>\n    <StyledFooter>\n      <Link href=\"https://github.com/makotot/undecorated/\" target=\"_blank\" rel=\"noopener\">\n        <FiGithub />\n      </Link>\n    </StyledFooter>\n  </footer>\n)\n\nexport {\n  Footer,\n}\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport React from 'react'\nimport { Header } from './header'\nimport { Wrapper } from './wrapper'\nimport { Main } from './main'\nimport { Footer } from './footer'\n\nconst Layout: React.SFC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header title={ 'Undecorated Collection' } />\n      <Main>\n        { children }\n      </Main>\n      <Wrapper>\n        <Footer />\n      </Wrapper>\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}