{"version":3,"sources":["webpack:///./src/components/playground.tsx","webpack:///./src/components/example/wrapper.tsx","webpack:///./src/components/example/heading.tsx","webpack:///./src/components/example/summary.tsx","webpack:///./src/components/example/body.tsx","webpack:///./src/components/example/foot.tsx","webpack:///./src/components/example/example.tsx","webpack:///./src/components/close-button.tsx","webpack:///./src/components/modal.tsx","webpack:///./src/components/code-tab.tsx","webpack:///./src/components/collections.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/wrapper.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/global-style.tsx","webpack:///./src/components/seo.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.tsx","webpack:///./src/components/main.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/navigation.tsx","webpack:///./src/components/drawer.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/code.tsx","webpack:///./src/components/code-block.tsx"],"names":["StyledPlayground","styled","div","BackgroundGridGround","color","alpha","BackgroundGrid","StyledFrame","Frame","Playground","children","FramePlayground","style","GlobalStyle","createGlobalStyle","globalStyle","document","target","head","Wrapper","section","Heading","h2","Summary","p","Body","Foot","footer","StyledFootButton","button","FootButton","onClick","Example","template","title","id","summary","iframe","index","useContext","AppContext","dispatch","state","Block","Element","type","isVisible","modalId","disableBodyScroll","querySelector","allowTouchMove","el","body","getAttribute","parentNode","StyledCloseButton","CloseButton","Modal","props","breakPoints","l","ModalHead","header","ModalHeadTitle","ModalInner","ModalBody","Overlay","StyledCodeTabNavLink","a","active","CodeTabNavLink","href","CodeTabNavItem","li","CodeTabNav","ul","CodeTabBody","CodeTab","groups","useState","activeIndex","setActiveIndex","handleActiveIndex","e","preventDefault","Number","currentTarget","dataset","map","g","key","data-index","items","item","i","code","lang","Collections","hide","clearAllBodyScrollLocks","patterns","defaultRules","rules","docs","jsxTemplate","currentPattern","cssbeautify","pretty","ReactDOMServer","renderToStaticMarkup","IndexPage","loader","enqueue","React","createContext","StyledWrapper","m","module","exports","require","default","Object","keys","spaces","s","join","SEO","description","site","meta","metaDescription","siteMetadata","htmlAttributes","name","content","titleTemplate","defaultTitle","rel","defaultProps","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","StyledHeader","h1","SubHeading","Menu","isOpened","HeaderInner","GutterCol","Header","size","to","StyledMain","main","Main","StyledFooter","InlineCentered","Link","Footer","Navigation","NavHeading","NavHeadingLink","DrawerBackground","isHidden","StyledDrawer","Drawer","Layout","CodeBody","CodeButtonFrame","CopyButton","Copied","CopiedItem","Code","clipboard","useClipboard","copiedTimeout","copy","useCallback","copied","Pre","pre","CodeBlock","language","theme","className","tokens","getLineProps","getTokenProps","data-body-scroll-lock-ignore","line","token"],"mappings":"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","file":"component---src-pages-index-tsx-02d17864e71ec180c23d.js","sourcesContent":["import React, { ReactNode } from 'react'\nimport styled, { createGlobalStyle, StyleSheetManager } from 'styled-components'\nimport { globalStyle } from './global-style'\nimport Frame, { FrameContextConsumer } from 'react-frame-component'\n\nconst StyledPlayground = styled.div`\n  position: relative;\n  background: #fff;\n  border: 1px solid rgba(0, 0, 255, 0.25);\n`\n\nconst BackgroundGridGround = styled.div`\n  background-color: rgba(250, 250, 250, 0.25);\n`\n\nconst color = (alpha: number) => `rgba(0, 0, 255, ${ alpha })`\n\n// ref: https://codepen.io/hyperstatic/pen/xHFop\nconst BackgroundGrid = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: transparent;\n  background-image:\n    linear-gradient(0deg, transparent 24%,\n      ${ color(0.1) } 25%,\n      ${ color(0.1) } 26%,\n      transparent 27%, transparent 74%,\n      ${ color(0.6) } 75%, \n      ${ color(0.6) } 76%,\n      transparent 77%, transparent),\n    linear-gradient(90deg, transparent 24%, \n      ${ color(0.1) } 25%, \n      ${ color(0.1)} 26%,\n      transparent 27%, transparent 74%, \n      ${ color(0.6) } 75%, \n      ${ color(0.6) } 76%,\n      transparent 77%, transparent);\n  background-size: 1rem 1rem;\n`\n\nconst StyledFrame = styled(Frame)`\n  width: 100%;\n  height: 10rem;\n  border: 1px solid #ccc;\n`\n\nconst Playground: React.SFC = ({ children }) => (\n  <StyledPlayground>\n    <BackgroundGridGround>\n      <BackgroundGrid />\n      { children }\n    </BackgroundGridGround>\n  </StyledPlayground>\n)\n\ninterface FramePlaygroundProps {\n  children: ReactNode\n  style: string\n}\n\nconst FramePlayground: React.SFC<FramePlaygroundProps> = ({ children, style }) => {\n  const GlobalStyle = createGlobalStyle`\n    ${ globalStyle }\n    ${ style }\n  `\n\n  return (\n    <StyledFrame>\n      <FrameContextConsumer>\n        {\n          ({ document }: { document: any }) => {\n            return(\n              <>\n                <StyleSheetManager target={ document.head }>\n                  <>\n                    <GlobalStyle />\n                    <Playground>{ children }</Playground>\n                  </>\n                </StyleSheetManager>\n              </>\n            )\n          }\n        }\n      </FrameContextConsumer>\n    </StyledFrame>\n  )\n}\n\nexport {\n  Playground,\n  FramePlayground,\n}\n","import styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 2rem;\n`\n\nexport {\n  Wrapper,\n}\n","import styled from 'styled-components'\n\nconst Heading = styled.h2`\n  display: block;\n  padding-bottom: 1rem;\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 300;\n  letter-spacing: 0.5rem;\n  border-bottom: 1px solid #222;\n`\n\nexport {\n  Heading,\n}\n","import styled from 'styled-components'\n\nconst Summary = styled.p`\n  color: #555;\n  font-size: 1rem;\n  line-height: 1.5rem;\n`\n\nexport {\n  Summary,\n}","import styled from 'styled-components'\n\nconst Body = styled.div`\n  margin: 1rem 0 0;\n`\n\nexport {\n  Body,\n}\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\n\nconst Foot = styled.footer`\n  margin-top: auto;\n  padding-top: 1rem;\n  text-align: center;\n`\n\nconst StyledFootButton = styled.button`\n  appearance: none;\n  display: inline-flex;\n  align-items: center;\n  background-color: #FFF;\n  color: #222;\n  border: 1px solid #222;\n  padding: 0.5rem;\n  font-size: 0.675rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #444;\n    color: #fff;\n  }\n`\n\ninterface FootButtonProps {\n  onClick: () => void;\n  children: ReactNode;\n}\n\nconst FootButton: React.SFC<FootButtonProps> = ({ children, onClick }) => (\n  <StyledFootButton onClick={ onClick }>\n    { children }\n  </StyledFootButton>\n)\n\nexport {\n  Foot,\n  FootButton,\n}\n","import React, { ReactNode, ReactFragment, useContext } from 'react'\nimport { FiCode } from 'react-icons/fi'\nimport { createGlobalStyle } from 'styled-components'\nimport { GutterRow } from 'undecorated'\nimport { Playground, FramePlayground } from '../playground'\nimport { AppContext } from '../../context/app-context'\nimport { Wrapper } from './wrapper'\nimport { Heading } from './heading'\nimport { Summary } from './summary'\nimport { Body } from './body'\nimport { Foot, FootButton } from './foot'\nimport { disableBodyScroll } from 'body-scroll-lock'\n\ninterface ExampleProps {\n  style: string\n  template: any,\n  title: string,\n  id: string,\n  summary: string,\n  iframe: boolean,\n  index: number,\n  jsxTemplate: string,\n}\n\nconst Example:React.SFC<ExampleProps> = ({\n  style,\n  template,\n  title,\n  id,\n  summary,\n  iframe = false,\n  index,\n}) => {\n  const GlobalStyle = createGlobalStyle`\n    ${ style }\n  `\n  const { state, dispatch } = useContext(AppContext)\n  const show = () => {\n    dispatch({\n      type: 'toggleModal',\n      isVisible: true,\n      modalId: index,\n    })\n    disableBodyScroll(document.querySelector('#js-modal') as HTMLElement, {\n      allowTouchMove: (el: HTMLElement | Element) => {\n        while (el && el !== document.body) {\n          if (el.getAttribute('body-scroll-lock-ignore')) {\n            return true\n          }\n          el = el.parentNode as HTMLElement\n        }\n      },\n    })\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper>\n        <Heading id={ id }>{ title }</Heading>\n        <Body>\n          <GutterRow.Block>\n            <GutterRow.Element>\n              <Summary>{ summary }</Summary>\n            </GutterRow.Element>\n            <GutterRow.Element>\n              {\n                iframe\n                ?\n                <FramePlayground style={ style }>{ template }</FramePlayground>\n                :\n                <Playground>{ template }</Playground>\n              }\n            </GutterRow.Element>\n          </GutterRow.Block>\n        </Body>\n        <Foot>\n          <FootButton\n            onClick={ show }\n          >\n            <FiCode />&nbsp;Show Code\n          </FootButton>\n        </Foot>\n      </Wrapper>\n    </>\n  )\n}\n\nexport {\n  Example,\n}\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\n\nconst StyledCloseButton = styled.button`\n  margin-left: auto;\n  appearance: none;\n  padding: 0.5rem;\n  background-color: #fff;\n  color: #222;\n  font-size: 1rem;\n`\n\ninterface CloseButtonProps {\n  children: ReactNode\n  onClick: () => void\n}\n\nconst CloseButton: React.SFC<CloseButtonProps> = ({ children, onClick }) => (\n  <StyledCloseButton onClick={ onClick }>\n    { children }\n  </StyledCloseButton>\n)\n\nexport {\n  CloseButton,\n}\n","import styled from 'styled-components'\nimport { breakPoints } from 'undecorated-tokens'\n\ninterface ModalProps {\n  isVisible: boolean;\n}\n\nconst Modal = styled.div`\n  position: fixed;\n  min-width: 80vw;\n  max-width: 90vw;\n  max-height: 90vh;\n  top: 50%;\n  left: 50%;\n  transition: all 0.3s ease;\n  transform: translate(-50%, ${ (props: ModalProps) => props.isVisible ? '-50%' : '-200%' });\n  opacity: ${ (props: ModalProps) => props.isVisible ? 1 : 0 };\n  background-color: #fff;\n  z-index: 10;\n\n  @media screen and (min-width: ${ breakPoints.l }px) {\n    max-width: 980px;\n  }\n`\n\nconst ModalHead = styled.header`\n  display: flex;\n  align-items: center;\n`\n\nconst ModalHeadTitle = styled.h2`\n  font-size: 1.125rem;\n  font-weight: 300;\n  letter-spacing: 0.5rem;\n  text-transform: uppercase;\n`\n\nconst ModalInner = styled.div`\n  overflow: hidden;\n  padding: 1rem;\n`\n\nconst ModalBody = styled.div`\n  max-height: 80vh;\n  overflow-x: auto;\n  overflow-scrolling: touch;\n`\n\ninterface OverlayProps {\n  isVisible: boolean\n  onClick: () => void\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  display: ${ (props: OverlayProps) => props.isVisible ? 'block' : 'none' };\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 9;\n`\n\nexport {\n  Modal,\n  ModalHead,\n  ModalHeadTitle,\n  ModalInner,\n  ModalBody,\n  Overlay,\n}\n","import React, { ReactNode, useState, MouseEvent } from 'react'\nimport { CodeBlock } from './code-block'\nimport styled from 'styled-components';\nimport { Language } from 'prism-react-renderer'\n\ninterface CodeTabNavLinkProps {\n  active: boolean\n  children: ReactNode\n  onClick: (e: MouseEvent<HTMLAnchorElement>) => void,\n}\n\nconst StyledCodeTabNavLink = styled.a`\n  display: block;\n  padding: 0.5rem;\n  color: ${ (props: CodeTabNavLinkProps) => props.active ? '#222' : '#555' };\n  border-bottom: 2px solid ${ (props: CodeTabNavLinkProps) => props.active ? '#222' : 'transparent' };\n  font-weight: ${ (props: CodeTabNavLinkProps) => props.active ? 400 : 300 };\n  text-decoration: none;\n`\n\nconst CodeTabNavLink = (props: CodeTabNavLinkProps) => (\n  <StyledCodeTabNavLink href=\"#\" { ...props }>\n    { props.children }\n  </StyledCodeTabNavLink>\n)\n\n\nconst CodeTabNavItem = styled.li`\n`\n\nconst CodeTabNav = styled.ul`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid #222;\n`\n\nconst CodeTabBody = styled.div`\n  margin-top: 1rem;\n`\n\ninterface GroupItem {\n  title: string,\n  items: { code: string, lang: Language }[],\n}\n\ninterface CodeTabProps {\n  groups: GroupItem[],\n}\n\nconst CodeTab: React.SFC<CodeTabProps> = ({ groups }) => {\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  const handleActiveIndex = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault()\n    setActiveIndex(Number(e.currentTarget.dataset.index))\n  }\n\n  return (\n    <>\n      <CodeTabNav>\n        {\n          groups.map((g, index) => (\n            <CodeTabNavItem key={ index }>\n              <CodeTabNavLink\n                active={ index === activeIndex }\n                onClick={ handleActiveIndex }\n                data-index={ index }\n              >\n                { g.title }\n              </CodeTabNavLink>\n            </CodeTabNavItem>\n          ))\n        }\n      </CodeTabNav>\n      <CodeTabBody>\n        {\n          groups.map((g, index) => {\n            if (index !== activeIndex) {\n              return null\n            }\n\n            return g.items.map((item, i) => (\n              <CodeBlock\n                key={ i }\n                code={ item.code }\n                lang={ item.lang }\n              />\n            ))\n          })\n        }\n      </CodeTabBody>\n    </>\n  )\n}\n\nexport {\n  CodeTab,\n}\n","import React, { useContext } from \"react\"\nimport ReactDOMServer from 'react-dom/server'\nimport { clearAllBodyScrollLocks } from 'body-scroll-lock'\nimport { FiX } from 'react-icons/fi'\nimport pretty from 'pretty'\nimport cssbeautify from 'cssbeautify'\nimport { FlowGrid, GutterRow } from 'undecorated'\nimport { AppContext } from '../context/app-context'\nimport { Example } from './example/example'\nimport { CloseButton } from './close-button'\nimport { Modal, ModalHead, ModalHeadTitle, ModalInner, ModalBody, Overlay } from './modal'\nimport { CodeTab } from './code-tab'\n\nconst Collections: React.SFC = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const hide = () => {\n    dispatch({\n      type: 'toggleModal',\n      isVisible: false,\n      modalId: -1,\n    })\n    clearAllBodyScrollLocks()\n  }\n\n  const patterns = state.patterns.map((item: any, index: number) => (\n    <Example\n      key={ index }\n      style={ item.defaultRules || item.rules }\n      template={ item.template() }\n      title={ item.docs.title }\n      id={ item.docs.id }\n      summary={ item.docs.summary }\n      iframe={ item.docs.iframe }\n      jsxTemplate={ item.jsxTemplate }\n      index={ index }\n    />\n  ))\n  const currentPattern = state.patterns[state.modalId]\n\n  return (\n    <>\n      <GutterRow.Block>\n        <GutterRow.Element>\n          <FlowGrid.Block>{ patterns }</FlowGrid.Block>\n        </GutterRow.Element>\n      </GutterRow.Block>\n\n      <Modal isVisible={ state.isVisible } id=\"js-modal\">\n        {\n          state.modalId > -1\n          &&\n          <ModalInner>\n            <ModalHead>\n              <ModalHeadTitle>{ currentPattern.docs.title }</ModalHeadTitle>\n              <CloseButton onClick={ hide }>\n                <FiX />\n              </CloseButton>\n            </ModalHead>\n            <ModalBody>\n              <CodeTab\n                groups={[\n                  {\n                    title: 'SCSS',\n                    items: [\n                      {\n                        code: cssbeautify(currentPattern.defaultRules || currentPattern.rules),\n                        lang: 'scss',\n                      },\n                      {\n                        code: pretty(ReactDOMServer.renderToStaticMarkup(currentPattern.template())),\n                        lang: 'markup',\n                      },\n                    ],\n                  },\n                  {\n                    title: 'Styled Components',\n                    items: [\n                      {\n                        code: currentPattern.jsxTemplate,\n                        lang: 'jsx',\n                      },\n                    ],\n                  },\n                ]}\n              >\n              </CodeTab>\n            </ModalBody>\n          </ModalInner>\n        }\n      </Modal>\n      <Overlay\n        isVisible={ state.isVisible }\n        onClick={ hide }\n      />\n    </>\n  )\n}\n\nexport {\n  Collections,\n}\n","import React from \"react\"\nimport SEO from \"../components/seo\"\nimport { GlobalStyle } from '../components/global-style'\nimport { Wrapper } from '../components/wrapper'\nimport { Collections } from '../components/collections'\nimport Layout from '../components/layout'\nimport { AppProvider } from '../context/app-context'\n\nconst IndexPage = () => (\n  <>\n    <GlobalStyle />\n    <SEO title=\"\" />\n    <AppProvider>\n      <Layout>\n        <Wrapper>\n          <Collections />\n        </Wrapper>\n      </Layout>\n    </AppProvider>\n  </>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledWrapper = styled.div`\n  max-width: 980px;\n  min-width: 320px;\n  margin: 0 auto;\n  padding: 0 1rem;\n`\n\nconst Wrapper: React.SFC = ({ children }) => (\n  <StyledWrapper>{ children }</StyledWrapper>\n)\n\nexport {\n  Wrapper,\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { spaces } from 'undecorated-tokens'\n\nconst createSpaces = () => `\n  ${\n    Object.keys(spaces).map((s) => {\n      return `--spaces-${ s }: ${ spaces[s] }rem;`\n    }).join('')\n  }\n`\n\nconst globalStyle = `\n  :root {\n    --base-font-size: 16px;\n\n    ${ createSpaces() }\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  *::before, *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: var(--base-font-size);\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body {\n    width: 100%;\n    margin: 0;\n    font-family: 'Source Sans Pro', -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif;\n    line-height: 1.25;\n    background-color: #fff;\n    color: #222;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul, ol {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  button {\n    border: 0;\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  pre {\n    margin: 0;\n  }\n\n  .dummy {\n    display: block;\n    padding: 2rem;\n    background-color: rgba(190, 170, 255, 0.5);\n    border: 2px solid #7e91ff;\n  }\n\n  .dummy-inline {\n    display: inline;\n    background-color: rgba(190, 170, 255, 0.5);\n    color: #7e91ff;\n    font-weight: bold;\n    border: 0;\n  }\n\n  .dummy-wrapper {\n    width:100%;\n    height: 10rem;\n  }\n\n  .dummy-background {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst GlobalStyle = createGlobalStyle`${ globalStyle }`\n\nexport {\n  GlobalStyle,\n  globalStyle,\n}\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }: { description: string, lang: string, meta: any[], title: string }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={ site.siteMetadata.title }\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          name: 'google-site-verification',\n          content: 'PHc2RN1kqWrlcCNtsmrI53TDAeZ72egGJbL2xhMl_vc',\n        },\n      ]}\n      titleTemplate={`${ site.siteMetadata.title }`}\n      defaultTitle={ site.siteMetadata.title }\n    >\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600&display=swap\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n  title: '',\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useContext, ReactNode } from 'react'\nimport { AppContext } from '../context/app-context'\nimport styled from 'styled-components'\nimport { Wrapper } from './wrapper'\nimport { GutterRow, Isorated, GutterCol } from 'undecorated'\nimport { Link } from 'gatsby'\nimport { FiMenu } from 'react-icons/fi'\n\nconst StyledHeader = styled.header`\n  padding: 1.25rem 0;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n`\n\nconst Heading = styled.h1`\n  margin: 0;\n  color: #333;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n`\n\nconst SubHeading = styled.p`\n  color: #444;\n  font-size: 0.75rem;\n  font-weight: 300;\n  letter-spacing: 0.05rem;\n`\n\nconst Menu = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const openDrawer = (e: React.MouseEvent) => {\n    e.preventDefault()\n    dispatch({\n      type: 'toggleDrawer',\n      isOpened: true,\n    })\n  }\n\n  return (\n    <a href=\"#\" onClick={ openDrawer }>\n      <FiMenu />\n    </a>\n  )\n}\n\nconst HeaderInner = styled(GutterCol.Block)`\n  align-items: center;\n`\n\ntype HeaderProps = {\n  title: string,\n  children?: ReactNode,\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => {\n  return (\n    <StyledHeader>\n      <Wrapper>\n        <HeaderInner>\n          <GutterCol.Element>\n            <Menu />\n          </GutterCol.Element>\n          <GutterCol.Element>\n            <GutterRow.Block size=\"xs\">\n              <GutterRow.Element>\n                <Heading><Link to=\"/\">undecorated</Link></Heading>\n              </GutterRow.Element>\n              <GutterRow.Element>\n                <SubHeading>Collection of reusable CSS layout pattern</SubHeading>\n              </GutterRow.Element>\n            </GutterRow.Block>\n          </GutterCol.Element>\n        </HeaderInner>\n      </Wrapper>\n    </StyledHeader>\n  )\n}\n\nexport {\n  Header,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledMain = styled.main`\n  padding: 2rem 0 1rem;\n`\n\nconst Main: React.SFC = ({ children }) => <StyledMain>{ children }</StyledMain>\n\nexport {\n  Main,\n}\n","import React, { useContext, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { FiGithub } from 'react-icons/fi'\nimport { InlineCentered } from 'undecorated'\n\nconst StyledFooter = styled(InlineCentered.Block)`\n  padding: 1rem 0;\n`\n\nconst Link = styled.a`\n  color: #222;\n`\n\nconst Footer = () => (\n  <footer>\n    <StyledFooter>\n      <Link href=\"https://github.com/makotot/undecorated/\" target=\"_blank\" rel=\"noopener\">\n        <FiGithub />\n      </Link>\n    </StyledFooter>\n  </footer>\n)\n\nexport {\n  Footer,\n}\n","import React, { ReactNode } from 'react'\nimport { GutterRow } from 'undecorated'\nimport { Link } from 'gatsby'\n\ninterface NavigationProps {\n  children?: ReactNode,\n}\n\nconst Navigation: React.SFC<NavigationProps> = ({ children }) => {\n  return (\n    <nav>\n      <GutterRow.Block size=\"l\">\n        <GutterRow.Element>\n          <Link to=\"/about/\">About</Link>\n        </GutterRow.Element>\n      </GutterRow.Block>\n    </nav>\n  )\n}\n\nexport { Navigation }\n","import React, { useContext, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { AppContext } from '../context/app-context'\nimport { GutterRow } from 'undecorated'\n\nconst NavHeading = styled.h2`\n  font-size: 0.875rem;\n  font-weight: 500;\n  text-transform: uppercase;\n`\n\nconst NavHeadingLink = styled(Link)`\n  color: #555;\n  text-decoration: none;\n`\n\ninterface DrawerBackgroundProps {\n  isHidden: boolean\n}\n\nconst DrawerBackground = styled.a`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(68, 68, 68, 0.25);\n  z-index: 3;\n  transition: all 0.3s ease;\n  display: ${ (props: DrawerBackgroundProps) => props.isHidden ? 'none' : '' };\n  opacity: ${ (props: DrawerBackgroundProps) => props.isHidden ? 0 : 1 };\n`\n\ninterface StyledDrawerProps {\n  isHidden: boolean,\n}\n\nconst StyledDrawer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  padding: 2rem 10vw 2rem 2rem;\n  background-color: #fff;\n  color: #444;\n  z-index: 4;\n  transition: all 0.3s ease;\n  transform: ${ (props: StyledDrawerProps) => props.isHidden ? 'translateX(-100%)' : 'translateX(0)' };\n`\n\ninterface DrawerProps {\n  children?: ReactNode,\n}\n\nconst Drawer: React.SFC<DrawerProps> = ({ children }) => {\n  const { state, dispatch } = useContext(AppContext)\n  const closeDrawer = (e: any) => {\n    e.preventDefault()\n    dispatch({\n      type: 'toggleDrawer',\n      isOpened: false,\n    })\n  }\n\n  return (\n    <>\n      <DrawerBackground onClick={ closeDrawer } isHidden={ !state.isOpened } />\n      <StyledDrawer isHidden={ !state.isOpened }>\n        <GutterRow.Block size=\"xl\">\n          <GutterRow.Element>\n            <NavHeading>\n              <NavHeadingLink to=\"/\">undecorated</NavHeadingLink>\n            </NavHeading>\n          </GutterRow.Element>\n          <GutterRow.Element>\n            { children }\n          </GutterRow.Element>\n        </GutterRow.Block>\n      </StyledDrawer>\n    </>\n  )\n}\n\nexport { Drawer }\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport React from 'react'\nimport { Header } from './header'\nimport { Wrapper } from './wrapper'\nimport { Main } from './main'\nimport { Footer } from './footer'\nimport { StickyFooter } from \"undecorated\"\nimport { Navigation } from \"./navigation\"\nimport { Drawer } from \"./drawer\"\n\nconst Layout: React.SFC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <StickyFooter.Block>\n        <Header title={ 'Undecorated Collection' } />\n        <Drawer>\n          <Navigation />\n        </Drawer>\n        <Main>\n          { children }\n        </Main>\n        <StickyFooter.Element>\n          <Wrapper>\n            <Footer />\n          </Wrapper>\n        </StickyFooter.Element>\n      </StickyFooter.Block>\n    </>\n  )\n}\n\nexport default Layout\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useClipboard } from 'use-clipboard-copy'\nimport { FiCopy, FiCheck } from 'react-icons/fi'\nimport { GutterCol } from 'undecorated'\n\nconst CodeBody = styled.div`\n  position: relative;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 0.875rem;\n`\n\nconst CodeButtonFrame = styled.div`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  z-index: 1;\n`\n\nconst CopyButton = styled.button`\n  padding: 0.5rem;\n  border: 0;\n  background-color: #fff;\n  color: #444;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #444;\n    color: #fff;\n  }\n`\n\nconst Copied = styled(GutterCol.Block)`\n  align-items: center;\n  padding: 0.5rem;\n  border: 0;\n  background-color: #fff;\n  color: #3c59ff;\n  font-size: 1rem;\n`\n\nconst CopiedItem = styled(GutterCol.Element)`\n  display: flex;\n`\n\ninterface CodeProps {\n  code?: string,\n  body: React.ReactNode,\n}\n\nconst Code: React.SFC<CodeProps> = ({ code, body }) => {\n  const clipboard = useClipboard({\n    copiedTimeout: 3000,\n  })\n\n  const copy = useCallback(() => {\n    clipboard.copy(code)\n  }, [clipboard.copy, code])\n\n  return (\n    <>\n      <CodeBody>\n        {\n          code\n          &&\n          <CodeButtonFrame>\n            {\n              clipboard.copied\n              ?\n                <Copied size=\"xs\">\n                  <CopiedItem>\n                    <FiCheck />\n                  </CopiedItem>\n                  <CopiedItem>\n                    Copied!\n                  </CopiedItem>\n                </Copied>\n              :\n                <CopyButton onClick={ copy }>\n                  <FiCopy />\n                </CopyButton>\n            }\n          </CodeButtonFrame>\n        }\n        { body }\n      </CodeBody>\n    </>\n  )\n}\n\nexport {\n  Code,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Highlight, { defaultProps, Language } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/github'\nimport { Code } from './code'\n\nconst Pre = styled.pre`\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  padding: 0.5rem 4rem 0.5rem 0.5rem;\n  min-height: 4rem;\n`\n\nconst CodeBlock = ({ lang, code }: { lang: Language, code: string }) => {\n  return (\n    <Code\n      code={ code }\n      body={\n        <Highlight { ...defaultProps } code={ code } language={ lang } theme={ theme }>\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <Pre className={ className } style={ style } data-body-scroll-lock-ignore=\"1\">\n              {\n                tokens.map((line, i) => (\n                  <div { ...getLineProps({ line, key: i }) }>\n                    {\n                      line.map((token, key) => (\n                        <span { ...getTokenProps({ token, key }) } />\n                      ))\n                    }\n                  </div>\n                ))\n              }\n            </Pre>\n          )}\n        </Highlight>\n      }\n    />\n  )\n}\n\nexport {\n  CodeBlock,\n}\n"],"sourceRoot":""}