{"version":3,"sources":["webpack:///./src/components/paragraph.tsx","webpack:///./src/components/list.tsx","webpack:///./src/components/text-link.tsx","webpack:///./src/pages/about.tsx"],"names":["Paragraph","styled","p","List","ul","Item","li","style","StyledAnchor","a","StyledLink","Link","TextLink","to","href","children","AboutPage","title","Block","Element","lang","code"],"mappings":"gLAEMA,EAAYC,UAAOC,EAAV,2EAAGD,CAAH,oBCCTE,EAAOF,UAAOG,GAAV,6DAAGH,CAAH,mBAIJI,EAAOJ,UAAOK,GAAV,6DAAGL,CAAH,4C,eCHJM,EAAQ,oFAQRC,EAAeP,UAAOQ,EAAV,0EAAGR,CAAH,QACbM,GAGCG,EAAaT,kBAAOU,QAAV,wEAAGV,CAAH,QACXM,GAQCK,EAA4B,SAAC,GAAD,QAAGC,UAAH,MAAQ,IAAR,EAAaC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,SAAnB,OAChCD,EAAO,kBAACN,EAAD,CAAcM,KAAOA,GAASC,GAA4B,kBAACL,EAAD,CAAYG,GAAKA,GAAOE,IC+B5EC,UA7CG,kBAChB,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,MAAM,UACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,YAAUC,MAAX,KACE,kBAAC,YAAUC,QAAX,KACE,kBAACnB,EAAD,KAAW,kBAAC,EAAD,CAAUa,GAAG,KAAb,eAAX,kDACA,6BACA,kBAACb,EAAD,kEACA,kBAACG,EAAD,KACE,kBAACE,EAAD,2HACA,kBAACA,EAAD,6EAEF,kBAACL,EAAD,6PACV,6BADU,kFAEA,kBAACA,EAAD,qFAAwF,wCAAxF,iBAAyH,kBAAC,EAAD,CAAUc,KAAK,iCAAf,qBAAzH,MACA,kBAACd,EAAD,qHAEF,kBAAC,YAAUmB,QAAX,KACZ,kBAAC,IAAD,CACEC,KAAK,MACLC,KAAI,2GAWM,kBAAC,YAAUF,QAAX,KACE,kBAACnB,EAAD","file":"component---src-pages-about-tsx-9d4a511cc3b179ddcb66.js","sourcesContent":["import styled from 'styled-components'\n\nconst Paragraph = styled.p`\n  line-height: 2;\n`\n\nexport {\n  Paragraph,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst List = styled.ul`\n  padding: 1rem;\n`\n\nconst Item = styled.li`\n  list-style-type: disc;\n  line-height: 2rem;\n`\n\nexport {\n  List,\n  Item,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst style = `\n  text-decoration: underline;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst StyledAnchor = styled.a`\n  ${ style }\n`\n\nconst StyledLink = styled(Link)`\n  ${ style }\n`\n\ntype Props = {\n  to?: string,\n  href?: string,\n}\n\nconst TextLink: React.FC<Props> = ({ to = '#', href, children }) => (\n  href ? <StyledAnchor href={ href }>{ children }</StyledAnchor> : <StyledLink to={ to }>{ children }</StyledLink>\n)\n\nexport {\n  TextLink,\n}\n","import React from 'react'\nimport SEO from '../components/seo'\nimport { GlobalStyle } from '../components/global-style'\nimport { Wrapper } from '../components/wrapper'\nimport Layout from '../components/layout'\nimport { AppProvider } from '../context/app-context'\nimport { CodeBlock } from '../components/code-block'\nimport { Paragraph } from '../components/paragraph'\nimport { List, Item } from '../components/list'\nimport { GutterRow } from 'undecorated'\nimport { TextLink } from '../components/text-link'\n\nconst AboutPage = () => (\n  <>\n    <GlobalStyle />\n    <SEO title=\"About\" />\n    <AppProvider>\n      <Layout>\n        <Wrapper>\n          <GutterRow.Block>\n            <GutterRow.Element>\n              <Paragraph><TextLink to=\"/\">Undecorated</TextLink> is Collection of reusable CSS layout pattern.</Paragraph>\n              <br />\n              <Paragraph>I made Undecorated mainly for the following two purposes.</Paragraph>\n              <List>\n                <Item>To be able to browse a variety of reusable CSS layout patterns and make them available for instant copy and paste.</Item>\n                <Item>Just import it with npm so that you can create the layout you want.</Item>\n              </List>\n              <Paragraph>There are multiple sites that list layout patterns in grid and sites that introduce layout patterns in flexbox, but I could not find any sites that could view various layout patterns (regardless of properties such as flexbox, grid, table, etc) .\n    <br />So I wanted to create a site where I could browse various CSS layout patterns.</Paragraph>\n              <Paragraph>In addition, I want to make those layout patterns available anywhere just by <code>import</code>(For now with <TextLink href=\"https://styled-components.com\">styled-components</TextLink>).</Paragraph>\n              <Paragraph>For example, if you want to center an element vertically and horizontally, you can do it by just following.</Paragraph>\n            </GutterRow.Element>\n            <GutterRow.Element>\n<CodeBlock\n  lang=\"jsx\"\n  code={\n`\nimport { Centered } from 'undecorated'\n\n<Centered>\n  <SomethingYouWantToCenter />\n</Centered>\n`\n}\n/>\n            </GutterRow.Element>\n            <GutterRow.Element>\n              <Paragraph>Unlike the existing flexbox and grid utility libraries that leave the layout to the user, it only provides patterns that achieve a specific CSS layout.</Paragraph>\n            </GutterRow.Element>\n          </GutterRow.Block>\n        </Wrapper>\n      </Layout>\n    </AppProvider>\n  </>\n)\n\nexport default AboutPage\n"],"sourceRoot":""}